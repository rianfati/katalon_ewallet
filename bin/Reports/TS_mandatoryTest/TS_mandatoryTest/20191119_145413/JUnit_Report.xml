<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="TS_mandatoryTest" time="6" tests="6" failures="0" errors="0">
    <testsuite name="TS_mandatoryTest" tests="6" failures="0" errors="0" time="6" timestamp="2019-11-19 14:54:15" hostname="Silvi - LAPTOP-ALMT97O4" id="Test Suites/TS_mandatoryTest/TS_mandatoryTest">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\katalon-ewallet\\Reports\\TS_mandatoryTest\\TS_mandatoryTest\\20191119_145413"/>
            <property name="logFiles" value="D:\\katalon-ewallet\\Reports\\TS_mandatoryTest\\TS_mandatoryTest\\20191119_145413\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="Silvi - LAPTOP-ALMT97O4"/>
            <property name="hostAddress" value="192.168.4.154"/>
            <property name="os" value="Windows 10 64bit"/>
            <property name="katalonVersion" value="6.2.2.4"/>
        </properties>
        <testcase name="Test Cases/Account/Login_Customer/Login Mandatory Test" classname="Test Cases/Account/Login_Customer/Login Mandatory Test" status="PASSED">
            <system-out>2019-11-19 14:54:15 - [TEST_CASE][PASSED] - Test Cases/Account/Login_Customer/Login Mandatory Test: Test Cases/Account/Login_Customer/Login Mandatory Test&#xD;
&#xD;
2019-11-19 14:54:16 - [TEST_STEP][PASSED] - var_enciphered_pin = SecureUtils.doEncryptPinRsaEwallet(dev_public_pem_file, var_user_pin): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - plain = "{" + ""user_agent":"" + var_user_agent + ""," + ""phone_number":"" + var_phone_number + ""," + ""pin":"" + var_enciphered_pin + ""," + ""device_id":"" + var_device_id + ""," + ""fcm_token":"" + var_fcm_token + ""}": null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - body = "{"organisation_id":"1","data":"" + encipheredData + "","lang":"id"}": null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - request = findTestObject("Account/Login_Customer_URL"): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:17 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:18 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\0.har&#xD;
&#xD;
2019-11-19 14:54:18 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - rcIsTrue = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:18 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - httpRespIsTrue = verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:18 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - access_token_customer = access_token: null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/E_Wallet/TC_createBilling/Create_Billing_Mandatory_Test" classname="Test Cases/E_Wallet/TC_createBilling/Create_Billing_Mandatory_Test" status="PASSED">
            <system-out>2019-11-19 14:54:18 - [TEST_CASE][PASSED] - Test Cases/E_Wallet/TC_createBilling/Create_Billing_Mandatory_Test: Test Cases/E_Wallet/TC_createBilling/Create_Billing_Mandatory_Test&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - trace_number = &lt;not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression&gt;: null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - trace_number = Math.random() * 10000: null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - plain = "{" + ""user_agent":"" + var_user_agent + ""," + ""trx_type_id":"" + var_trx_type_id + ""," + ""to":"" + var_to + ""," + ""to_id":"" + var_to_id + ""," + ""amount":"" + var_amount + ""," + ""billing_ref1":"" + var_billing_ref1 + ""," + ""billing_ref2":"" + var_billing_ref2 + ""," + ""billing_ref3":"" + var_billing_ref3 + ""," + ""trace_number":"" + trace_number + ""," + ""need_verify":"" + var_need_verify + ""," + ""phone_number":"" + var_phone_number + ""," + ""qr_unique_code":"" + var_unique_code + ""}": null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:18 - [TEST_STEP][PASSED] - out.println("var_customer_token" + var_customer_token): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println("var_partner_token" + var_partner_token): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - body = "{"organisation_id":"" + var_organisation_id + ""," + ""data":"" + encipheredData + ""," + ""lang":"" + var_lang + ""}": null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - request = findTestObject("E_Wallet/obj_createBillingCustomer"): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:19 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\1.har&#xD;
&#xD;
2019-11-19 14:54:19 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - result = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:19 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - if (result == false): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:19 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - var_billing_id = billing_id: null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - println(billing_id): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/E_Wallet/TC_texoPaymentModification/payment_mandatory_test" classname="Test Cases/E_Wallet/TC_texoPaymentModification/payment_mandatory_test" status="PASSED">
            <system-out>2019-11-19 14:54:19 - [TEST_CASE][PASSED] - Test Cases/E_Wallet/TC_texoPaymentModification/payment_mandatory_test: Test Cases/E_Wallet/TC_texoPaymentModification/payment_mandatory_test&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - var_enciphered_pin = SecureUtils.doEncryptPinRsaEwallet(dev_public_pem_file, var_user_pin): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - println(var_billing_id): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - plain = "{" + ""user_agent":"" + var_user_agent + ""," + ""billing_id":"" + var_billing_id + ""," + ""wallet_id":"" + var_wallet_id + ""," + ""phone_number":"" + var_phone_number + ""," + ""authentication":"" + var_enciphered_pin + ""}": null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println("var_customer_token" + var_customer_token): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println("var_partner_token" + var_partner_token): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - println(var_billing_id): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - body = "{"organisation_id":"" + var_organisation_id + ""," + ""data":"" + encipheredData + ""," + ""lang":"" + var_lang + ""}": null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - request = findTestObject("E_Wallet/obj_texoPaymentModification"): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - if (var_customer_token == 0): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - out.println("using access_token = " + access_token_customer): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - listQuery = new java.util.ArrayList(): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - listQuery.add(new com.kms.katalon.core.testobject.TestObjectProperty(token, com.kms.katalon.core.testobject.ConditionType.EQUALS, internal.GlobalVariable.access_token_customer)): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - request.setRestParameters(listQuery): null&#xD;
&#xD;
2019-11-19 14:54:19 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\2.har&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - result = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - if (result == false): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/E_Wallet/TC_getHistoryTransaction/TC_getHistoryTransaction" classname="Test Cases/E_Wallet/TC_getHistoryTransaction/TC_getHistoryTransaction" status="PASSED">
            <system-out>2019-11-19 14:54:20 - [TEST_CASE][PASSED] - Test Cases/E_Wallet/TC_getHistoryTransaction/TC_getHistoryTransaction: Test Cases/E_Wallet/TC_getHistoryTransaction/TC_getHistoryTransaction&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - plain = "{" + ""user_agent":"" + var_user_agent + ""," + ""wallet_id":"" + var_wallet_id + ""," + ""trx_type_id":"" + var_trx_type_id + ""," + ""start_time":"" + var_start_time + ""," + ""end_time":"" + var_end_time + ""}": null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - page_number = var_page_number: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - page_size = var_page_size: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println("var_customer_token" + var_customer_token): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println("var_partner_token" + var_partner_token): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - body = "{"organisation_id":"" + var_organisation_id + ""," + ""data":"" + encipheredData + ""," + ""lang":"" + var_lang + ""}": null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - request = findTestObject("E_Wallet/obj_getHistoryTransaction"): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - if (var_customer_token == 0): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println("using access_token = " + access_token_customer): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - listQuery = new java.util.ArrayList(): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - listQuery.add(new com.kms.katalon.core.testobject.TestObjectProperty(token, com.kms.katalon.core.testobject.ConditionType.EQUALS, internal.GlobalVariable.access_token_customer)): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - request.setRestParameters(listQuery): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\3.har&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - result = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - if (result == false): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - dechiperedResponse = new java.lang.String(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:20 - [TEST_STEP][PASSED] - println(dechiperedResponse): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Account/Login_Merchant/Login_Merchant_Elena" classname="Test Cases/Account/Login_Merchant/Login_Merchant_Elena" status="PASSED">
            <system-out>2019-11-19 14:54:20 - [TEST_CASE][PASSED] - Test Cases/Account/Login_Merchant/Login_Merchant_Elena: Test Cases/Account/Login_Merchant/Login_Merchant_Elena&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - var_enciphered_password = SecureUtils.doEncryptPinRsaEwallet(dev_public_pem_file, var_user_password): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - plain = "{" + ""email_address":"" + var_email_address + ""," + ""user_agent":"" + var_user_agent + ""," + ""password":"" + var_enciphered_password + ""}": null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - body = "{"organisation_id":"" + var_organisation_id + ""," + ""data":"" + encipheredData + ""," + ""lang":"" + var_lang + ""}": null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - request = findTestObject("Account/Login_Merchant_URL"): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\4.har&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(body_content): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - rcIsTrue = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - httpRespIsTrue = verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - access_token_merchant = access_token: null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Dashboard_App/TC_getHistoryTransaction/TC_getHistoryTransaction" classname="Test Cases/Dashboard_App/TC_getHistoryTransaction/TC_getHistoryTransaction" status="PASSED">
            <system-out>2019-11-19 14:54:21 - [TEST_CASE][PASSED] - Test Cases/Dashboard_App/TC_getHistoryTransaction/TC_getHistoryTransaction: Test Cases/Dashboard_App/TC_getHistoryTransaction/TC_getHistoryTransaction&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - plain = "{" + ""outlet_id":"" + var_outlet_id + ""," + ""transaction_date":"" + var_transaction_date + ""}": null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - page_number = var_page_number: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - page_size = var_page_size: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(plain): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println("var_merchant_token" + var_merchant_token): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println("var_partner_token" + var_partner_token): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - encipheredData = SecureUtils.encryptAesEwallet(plain, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - body = "{"organisation_id":"" + var_organisation_id + ""," + ""data":"" + encipheredData + ""," + ""lang":"" + var_lang + ""}": null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(body): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - request = findTestObject("Dashboard_App/Get_History_Transaction_URL"): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - request.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(body, UTF-8, application/json)): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - if (var_merchant_token == 0): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println("using access_token = " + access_token_merchant): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - listQuery = new java.util.ArrayList(): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - listQuery.add(new com.kms.katalon.core.testobject.TestObjectProperty(token, com.kms.katalon.core.testobject.ConditionType.EQUALS, internal.GlobalVariable.access_token_merchant)): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - request.setRestParameters(listQuery): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - response = sendRequest(request): Send request successfully&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][INFO] - HAR: D:\katalon-ewallet\Reports\TS_mandatoryTest\TS_mandatoryTest\20191119_145413\requests\main\5.har&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Send request successfully&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - body_content = responseBodyContent: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - status_code = statusCode: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - respDataMap = JsonSlurper().parseText(body_content): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(respDataMap): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - println(body_content): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - rc_ref = ReturnCodeWrapper(var_expected_rc).getEnumRC(): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(var_expected_rc): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(rc_ref.getRCName()): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(rc_ref.getHttpResponse()): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - result = verifyEqual(response_code, rc_ref.getRCName()): Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Actual object 'RC00' and expected object 'RC00' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - if (result == false): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - verifyEqual(statusCode, rc_ref.getHttpResponse()): Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [MESSAGE][PASSED] - Actual object '200' and expected object '200' are equal&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - if (rc_ref == RC00): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - decipheredResponseData = SecureUtils.decryptAesEwallet(data, var_aes_key): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - decipheredRespDataMap = JsonSlurper().parseText(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - out.println(decipheredRespDataMap): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - dechiperedResponse = new java.lang.String(decipheredResponseData): null&#xD;
&#xD;
2019-11-19 14:54:21 - [TEST_STEP][PASSED] - println(dechiperedResponse): null</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-11-19 14:54:15 - [TEST_SUITE][INCOMPLETE] - TS_mandatoryTest: null</system-out>
        <system-err>2019-11-19 14:54:15 - [TEST_SUITE][INCOMPLETE] - TS_mandatoryTest: null</system-err>
    </testsuite>
</testsuites>
